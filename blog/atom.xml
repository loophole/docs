<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://loophole.cloud/blog</id>
    <title>Loophole Blog</title>
    <updated>2021-12-23T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://loophole.cloud/blog"/>
    <subtitle>Loophole Blog</subtitle>
    <icon>https://loophole.cloud/img/icon.png</icon>
    <rights>Copyright © 2022 Main Development GmbH. All rights reserved.</rights>
    <entry>
        <title type="html"><![CDATA[The Next Big Thing!]]></title>
        <id>the-next-big-thing</id>
        <link href="https://loophole.cloud/blog/the-next-big-thing"/>
        <updated>2021-12-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[As we continue to improve Loophole and aim to migrate from the current beta version to a more stable version, we have been thrilled with the response received from users all over the world in the past couple of months.]]></summary>
        <content type="html"><![CDATA[<p>As we continue to improve Loophole and aim to migrate from the current beta version to a more stable version, we have been thrilled with the response received from users all over the world in the past couple of months. </p><p>Loophole was initially created as a hobby project during our Friday office happy hours before it was launched for the public. Today it has both CLI and GUI-based interfaces with over <strong>15000 tunnels</strong> launched by <strong>700 users</strong>  from over <strong>91 countries</strong> in the world. These numbers set a foundation for our product and its use case. It not only uplifts every team member’s confidence that has worked numerous hours in building Loophole but also makes us realize the true potential of Loophole in a developer’s toolkit. </p><img src="https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif" width="650" height="350"/><h3>The road ahead.</h3><p>Loophole has gone through tremendous changes since its launch with the help and feedback from users like you. Users have made it possible for us to finally move toward a stable version. The Loophole team believes in giving back to society. Rather than setting up a subscription-based model, we have decided to keep Loophole available for public use at no cost.We do not plan to charge users any fee for using our services. There are no hidden charges, nothing! You can continue to use Loophole as you did in the past. All our features including, custom domain names, long tunnel active times, and directory shares remain free and open to use.  You may ask, what’s the catch? Well, we do need some financial support to run our infrastructure. To cover up the expenses, we plan to ask for donations. These donations would help us maintain our infrastructures and additional expenses to upgrade and improve the overall tool. Visit us on <a href="https://www.buymeacoffee.com/loophole">buy me a coffee</a> to support!</p><p>Lastly, let us tell you more about what is in the future. We plan to launch new features including anonymous signups, and security advancements against abuse use in upcoming weeks. The Loophole team takes privacy very seriously. Our roadmap consists of a major upgrade that will let users migrate to a self-hosted authentication platform in the upcoming months. This will further strengthen and secure our platform and reduce the reliability of third-party services. </p><p>We appreciate your trust in Loophole. We would love to hear from you. Your support will keep us motivated to keep building Loophole. If you want to request a special feature or wish to share your feedback about Loophole, feel free to fill the form  or email us at <a href="mailto:loophole@main.dev.">loophole@main.dev.</a> </p><p>To support our development, don&#x27;t forget to <a href="https://www.buymeacoffee.com/loophole">buy us a coffee or a cookie</a>. We are also open for some beers. Cheers!</p>]]></content>
        <author>
            <name>Aman Kalra</name>
            <uri>https://github.com/amankalra172</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing Loophole Desktop]]></title>
        <id>announcing-loophole-desktop</id>
        <link href="https://loophole.cloud/blog/announcing-loophole-desktop"/>
        <updated>2021-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Loophole is a reverse proxy that enables you to expose your localhost to the internet. Some developers, especially Windows users, like running graphical applications.]]></summary>
        <content type="html"><![CDATA[<p>Loophole is a reverse proxy that enables you to expose your localhost to the internet. Some developers, especially Windows users, like running graphical applications. </p><p><img src="https://media.giphy.com/media/h1uchvpmq4h3NiBhG1/giphy.gif" alt="Login"/></p><p><strong>We have heard you!</strong> </p><p><strong><em> Introducing <code>Loophole Desktop</code>, a simple and powerful GUI application to run developer-friendly tunnels. Loophole is making reaching the world easy and safe. </em></strong></p><p>The new dashboard hosts all the features available in the CLI in a more user-friendly form. Let’s get started in exploring basic features and getting acquainted with the usage.</p><p>First, go to the <a href="/download">Download</a> page and navigate to the <code>Desktop</code> section. Now choose your operating system and the auto-download should begin.</p><p>:::note
Currently, it is available starting from version 1.0.0-beta.13!
:::</p><h3>Getting  Started</h3><p>On Linux or OSX you can unzip Loophole from a terminal with the following command:</p><pre><code class="language-bash">$ unzip /path/to/loophole-desktop-&lt;version&gt;.zip
</code></pre><p>On Windows, just double click <code>loophole-desktop-&lt;version&gt;.zip</code> .</p><h3>Run EXE</h3><p>Simply double click on it or run from the terminal:</p><pre><code class="language-bash">$ loophole-desktop
</code></pre><h3>Login Page</h3><p>Loophole was built with privacy and security in mind. Before we have a look at the features, let’s log in. Click on Login button and follow the instructions on the screen.</p><p><img src="/img/blog/GUI/login_gui.jpg" alt="Login"/></p><p>:::tip
If you face issues with Login, click <strong>Restart the process</strong> under the Login section. If the problem still persist, email at <a href="mailto:loophole@main.dev.">loophole@main.dev.</a>
:::</p><h3>Tunnel startup</h3><p>Starting a tunnel has never been so easy. Simply, click the + button and fill in the host name, port, and click submit. You can alternatievly click on <code>Create</code> from the side bar menu.</p><p><img src="/img/blog/GUI/loophole_gui_1.gif" alt="tunnel"/></p><h3>Customise your Tunnel</h3><p>Loophole lets you choose from the three options to customize your tunnel services.</p><p>a. Choose your custom hostname as:</p><p> <code>&lt;custom hostname&gt;.loophole.site</code></p><p>b. Enable basic authentication to prohibit unauthorized access to your web app.</p><p>c. Disable the loophole proxy page to view the regular 502 error page.</p><p><img src="/img/blog/GUI/loophole_gui_2.gif" alt="custom"/></p><p>:::tip
Find all your active tunnels by clicking <strong>List</strong> from your side menu!
:::</p><h3>Dashboard Features</h3><p>Other services offered by Loophole GUI include </p><p>a. Sharing your directory with another user.</p><p>b. Webdav application.</p><p>To know more about these services, visit our <a href="/blog">Blogs</a>!</p>]]></content>
        <author>
            <name>Łukasz Sowa</name>
            <uri>https://github.com/morishiri</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Share your files with ease!]]></title>
        <id>share-your-files-with-ease</id>
        <link href="https://loophole.cloud/blog/share-your-files-with-ease"/>
        <updated>2020-12-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Developers often get caught in this problem: You have a huge file that you wish to transfer to your friend. The file is too big to be sent via email or instant messenger.]]></summary>
        <content type="html"><![CDATA[<p>Developers often get caught in this problem: You have a huge file that you wish to transfer to your friend. The file is too big to be sent via email or instant messenger. </p><p>A simple approach could be to upload it to Dropbox or similar cloud services, but what if you don&#x27;t have/want an account with them, or just don&#x27;t have enough storage freed up. Well, there could be a scenario where you want to bypass the big giants altogether that comes with huge security concerns. </p><p>Instead of going through that hassle, you can save time by transferring files (big and small) to your friend by using Loophole. You do not need to encrypt your files before the transfer because they are being tunneled through a very secure SSH protocol.</p><p><strong>But wait, I have something more!</strong> If you want to share multiple files with any number of users, you can add them to the specified folder location while your buddies can browse through that section of your PC. Sharing files can be a whole lot simpler and quicker with this method. All you have to do is drag and drop, and let them know they can now download the file(s).</p><p><img src="/img/blog/2020/undraw_upload_87y9.svg" alt="filesharing"/>
<em>source: <a href="https://undraw.co">undraw.co</a></em></p><h2>Setting up Loophole</h2><h3>Download</h3><p>We begin with setting up a loophole tunnel in Windows. <a href="/download">You can download the file here</a>. For Mac and Linux users, the process shouldn&#x27;t be much different. Choose the relevant download option. </p><p>Once downloaded, open the command prompt and go to the location where loophole.exe is stored <em>(often in the download folder)</em>.</p><h3>Login</h3><p>Your loophole client needs to be authenticated before we can start the tunnel. For authentication, simply use the below command :</p><pre><code>loophole account login
</code></pre><p><img src="/img/blog/2020/loophole_12_login.gif" alt="Login"/></p><h2>File Sharing</h2><h3>Setting up the path</h3><p>Once you are ready to begin hosting the file, use the following command to activate a secured HTTPS tunnel :</p><pre><code>loophole path &lt;path to the local directoy&gt; 
</code></pre><p><img src="/img/blog/2020/loophole_12_path.gif" alt="Login"/></p><p>:::note Note
In order to give a longer path name, use double quotes <code>&quot; &quot;</code>. Example : </p><pre><code>Loophole path &quot;c:\Users\My File Manager&quot; 
</code></pre><p>:::</p><h3>Secure Connection</h3><p>Loophole by default provides an end to end encryoted and secured tunnel. You can furthur add your own authentication with a username and password that restricts the directory access control. To do so, simply use the flag <code>-u</code> and <code>-p</code> after the <code>path</code> command.</p><pre><code>loophole path &lt;path to the local directoy&gt;  -u &lt;username&gt; -p &lt;password&gt;
</code></pre><p><img src="/img/blog/2020/loophole_12_path_auth.gif" alt="Login"/></p><h3>Directory Access</h3><p>On the successful start of the tunnel, you can now share the URL generated with your friends. <strong>This tunnel is HTTPS secured using Let&#x27;s encrypt and is valid for a time period of 60 minutes.</strong></p><p>:::tip Tip
Make sure you give the right local directory path and have some files stored to test the transfer.
:::</p><h3>Bonus Tip!!</h3><p>You can use the following command to generate a custom domain URL. The URL needs to be a minimum of 6 letters and must follow the domain naming convention. The domain name is reserved for a user for next 30 days to reuse.</p><pre><code>loophole path &lt;path to the local directory&gt; --hostname &lt;custom hostname&gt;
</code></pre><p><img src="/img/blog/2020/loophole_12_path_domain.gif" alt="Login"/></p><p>Now you can share local files(big or small) with your friends over a secured tunnel in under 5 minutes. To know more about Loophole, head to <a href="http://www.loophole.cloud">www.loophole.cloud</a> or explore our <a href="/docs">docs!</a></p>]]></content>
        <author>
            <name>Aman Kalra</name>
            <uri>https://github.com/amankalra172</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Choose your Custom Domains]]></title>
        <id>choose-your-custom-domain</id>
        <link href="https://loophole.cloud/blog/choose-your-custom-domain"/>
        <updated>2020-12-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Web developers usually develop on localhost using their preferred tools and languages. They often utilize the local server to test the web apps. Have you come across a situation where you might need to showcase your work to a client or a colleague for feedback/progress? I am sure it wouldn't be worth the effort to deploy the web app after every tiny change on the site. Even worse, the time it takes to deploy these changes takes forever.]]></summary>
        <content type="html"><![CDATA[<p>Web developers usually develop on localhost using their preferred tools and languages. They often utilize the local server to test the web apps. Have you come across a situation where you might need to showcase your work to a client or a colleague for feedback/progress? I am sure it wouldn&#x27;t be worth the effort to deploy the web app after every tiny change on the site. Even worse, the time it takes to deploy these changes takes forever. </p><p>Perhaps, you could use Loophole or similar services like Ngrok, Localhost.run, or Server. These services are reverse proxies that allow you to expose your local development server. For now, we focus on Loophole. Simply because it offers all of its premium services free of use in its current beta version. Follow along and learn how to put this into your toolbelt of applications.</p><p><strong>How to?</strong></p><p>Before we dive deep into using Loophole, let us have our web app running. If you do not have a web app to test, you could use a simple Node js app as shown below. This app is running on port 8000.</p><p>:::note Note
The webapp is running on port 8000
:::</p><pre><code class="language-javascript">const os = require(&#x27;os&#x27;);
const express = require(&#x27;express&#x27;);

const port = process.env.PORT || 8000;
const app = express();

app.get(&#x27;/*&#x27;, function (req, res) {
  const hostname = os.hostname();
  res.json({hostname, version: &#x27;2&#x27;});
});

app.listen(port, () =&gt; {
  console.log(`demo-app listening on port ${port}`);
});
</code></pre><p><strong>Moving On!</strong></p><p>Now that our web app is running on our local server, let us start by downloading the right binary file of Loophole. This process is broken down into three simple steps:</p><ol><li><a href="/download">Download Loophole for your OS</a></li><li>Unpack it (Unzip).</li><li>Launch CMD and go to the file downloaded path.</li></ol><p>Ta-dah! you are one step close now.</p><p>Here we will try establishing a loophole tunnel for Windows. It would be easy peasy for Linux and macOS too. I have moved the loophole file to my home directory. </p><p>:::note Note
The custom domain name is reserved for the next 30 days under your account from the day of first usage. Whereas, random generated URLs are only valid for 60 minutes.
:::</p><p><strong>Now, let&#x27;s play!</strong></p><p>Remember, our local web app was running on 8000 port. Let us share this with Loophole and see it&#x27;s magic.</p><pre><code>loophole 8000 --hostname &lt;yourdomainname&gt;
</code></pre><p><img src="/img/blog/loophole_12_domain.gif" alt="Tunnel"/></p><p>The flag <code>--hostname</code> lets you set a custom domain name. This is an ideal scenario while sharing it with the client and wouldn&#x27;t prefer sharing a random generated domain URL. I have used the name <code>qrtesting</code> as my custom domain name. You are free to choose any name that you like. </p><p><strong>QR code? Why not.</strong></p><p>While loophole is being used mainly for the testing environment, another ideal use case is to share locally created feedback forms to a large audience or survey forms for your upcoming product. To ease this process, you can now generate QR codes along with your custom domains by simply using </p><pre><code>loophole 8000 -qr --hostname &lt;yourdomainname&gt;
</code></pre><p><img src="/img/blog/loophole_12_domain_qr.gif" alt="Tunnel"/></p><p>This fires up a bunch of commands. notice, the link <code>https://qrtesting.loophole.site</code> points to our local port 8000 where our sample app is hosted. You can share this link with your friends and colleagues and have your server running locally.</p><p>:::tip Tip
The web url will be live till the time your local tunnel is running. It automatically terminates once loophole session is terminated.
:::</p><p>If you have any questions or want to share your experience with us, feel free to write to us at <a href="mailto:loophole@main.dev.">loophole@main.dev.</a> To see more on Loophole, head to <a href="/docs">documentation</a> .</p>]]></content>
        <author>
            <name>Aman Kalra</name>
            <uri>https://github.com/amankalra172</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started with Loophole!]]></title>
        <id>get-started-with-loophole</id>
        <link href="https://loophole.cloud/blog/get-started-with-loophole"/>
        <updated>2020-10-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Aspire to expose your localhost to the Internet with minimal effort? Do you wish to avoid going through the tedious deployment process? Let me introduce you to Loophole.]]></summary>
        <content type="html"><![CDATA[<p>Aspire to expose your localhost to the Internet with minimal effort? Do you wish to avoid going through the tedious deployment process? Let me introduce you to Loophole. </p><p><strong>So, what&#x27;s Loophole?</strong></p><p>In simple words, Loophole allows you to make your Web application public without actually deploying on a cloud service. It provides a user-friendly domain that you can share with your remote users/friends/teammates to try/use your WebApp. </p><p><strong>Let&#x27;s give it a try!</strong></p><p>Firstly, create an account with Loophole . By creating an account, you get access to all the features loophole provides in its beta version. Next, <a href="/download">Download the latest version of Loophole here.</a></p><p><strong>Getting Started</strong></p><p>In windows, click the loophole.zip file to unzip. </p><p>For Mac and Linux, use terminal with the following command:</p><pre><code class="language-bash">$ unzip /path/to/loophole.zip
</code></pre><p><strong>Authenticating Loophole CLI for all feature access</strong></p><p>Once you&#x27;ve signed up, you need to configure loophole with the authtoken.with authtoken, you get access to account-only features. Loophole has a simple &#x27;account&#x27; command to make this easy. Under the hood, the login command adds (or modify) the authtoken property in your loophole configuration file. </p><p><img src="/img/blog/2020/loophole_12_login.gif" alt="Login"/></p><p><strong>Running our local server project</strong></p><p>Meanwhile, we need to have a webapp running. Here we consider a simple gatsby server for representation purposes.</p><p>:::note Note
The webapp is running on port 8000
:::</p><pre><code class="language-javascript">const os = require(&#x27;os&#x27;);
const express = require(&#x27;express&#x27;);

const port = process.env.PORT || 8000;
const app = express();

app.get(&#x27;/*&#x27;, function (req, res) {
  const hostname = os.hostname();
  res.json({hostname, version: &#x27;2&#x27;});
});

app.listen(port, () =&gt; {
  console.log(`demo-app listening on port ${port}`);
});
</code></pre><p>Now all we have to do is let Loophole know the port our local server is running on! After authentication,follow the below instructions:</p><p><img src="/img/blog/2020-10-29-get-started-with-loophole/8000.gif" alt="Tunnel"/></p><p>:::tip Tip
If your app is running on a different port, just replace 8000 with your respective port.
:::</p><p><strong>Example</strong> - For an app running on port 3000, the command will be </p><pre><code class="language-bash">$ loophole http 3000

# or for 1.0.0-beta.8 and older
$ loophole 3000
</code></pre><p>and it fires a HTTPS secured tunnel for you.</p><p>Your website is now <strong>LIVE</strong>!</p><p><strong>Share the URL with people you want to show your web application. It is that simple</strong></p><p>There are endless possibilities with Loophole. You can create a custom domain, or share a QR code than a URL. I would cover those features individually in other blog posts. For more details, you can refer to the <a href="/docs">documentation</a> here.</p>]]></content>
        <author>
            <name>Aman Kalra</name>
            <uri>https://github.com/amankalra172</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Expose yourself to the world!]]></title>
        <id>expose-yourself-to-the-world</id>
        <link href="https://loophole.cloud/blog/expose-yourself-to-the-world"/>
        <updated>2020-10-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Local development environment makes the process fast and easy to test as you change your code continuously.]]></summary>
        <content type="html"><![CDATA[<p>Local development environment makes the process fast and easy to test as you change your code continuously.
But in doing so, you might run into situations where you need to make it available publicly via an accessible URL while you’re still in the development phase. </p><p><strong>Loophole helps you expose yourself to the world. Share your development environment with much ease</strong></p><p>Did you ever wish to show your work to a client or colleague, or hoped for a secure, publicly available callback URL to interact with a web service. A complicated way includes uploading your application to a hosting platform like Heroku or AWS, but every time you update your code, you’d have to push those changes to your host server. Tedious and not a favorable approach, right?</p><p><img src="/img/blog/undraw_real_time_collaboration_c62i.svg" alt="collaboration"/>
<em>source: <a href="https://undraw.co">undraw.co</a></em></p><p><strong>Staying Agile</strong></p><p>Loophole comes into play here. Loophole can be your next utility kit that creates an instantly secure, publicly accessible tunnel URL to an application that’s running on the localhost. In short, you can expose your local web server, APIs, databases, etc. So, It’s easier to expose your services when you don’t have big changes and don’t want to deploy it in your development environment.</p><p>Loophole can take any HTTP service, on any network, particularly private ones, and expose it to the rest of the Internet. Developers that create applications want to share them, and with Loophole, they can enjoy lower costs, increased portability, and productivity.</p><p>For technology enthusiasts that want to self-host their own services, their costs are reduced. The network configuration is simplified. Most importantly, their data is stored on their computers.</p>]]></content>
        <author>
            <name>Aman Kalra</name>
            <uri>https://github.com/amankalra172</uri>
        </author>
    </entry>
</feed>